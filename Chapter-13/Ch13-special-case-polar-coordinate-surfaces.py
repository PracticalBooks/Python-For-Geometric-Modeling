# -*- coding: utf-8 -*-
"""Ch13-Special-case-Polar-coordinate-surfaces.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1P7_1YKLfUetWmpr3R5FSq1Uqisn_ea9x

**Example: Waves on waterâ€™s surface**
"""

import numpy as np
import plotly.graph_objects as go
u = np.linspace(0,9*np.pi,50)
v = np.linspace(0,2*np.pi,50)
U,V = np.meshgrid(u,v)
r = U
X = r * np.cos(V)
Y = r * np.sin(V)
Z = np.sin(r)
fig = go.Figure(go.Surface(x=X,y=Y,z=Z,opacity=1,colorscale='ylorrd',showscale=False,
                     contours=dict(x=dict(show=True),y=dict(show=True),z=dict(show=False))))
fig.update_layout(scene = dict(aspectratio = dict(x=1, y=1, z=.1)))
fig.show()

"""**Example: Cowboy hat**"""

import numpy as np
import plotly.graph_objects as go
u = np.linspace(0,2*np.pi/3,100)
v = np.linspace(0,2*np.pi,100)
U, V = np.meshgrid(u,v)
r = U
X = r * np.cos(V)
Y = r * np.sin(V)
Z = np.sin(X**2+Y**2) * np.exp(-X**2) + np.cos(X**2+Y**2)
fig = go.Figure(go.Surface(x=X,y=Y,z=Z,opacity=1,colorscale ='burg',showscale=False,
                    contours=dict(x=dict(show=True),y=dict(show=True),z=dict(show=True))))
fig.update_layout(scene = dict(aspectratio = dict(x=1, y=1, z=.5)))
fig.show()

"""**Example: Spiral toboggan**"""

import numpy as np
import plotly.graph_objects as go
u = np.linspace(0,5*np.pi,100)
v = np.linspace(0,np.pi,50)
U, V = np.meshgrid(u,v)
r = U
X = r * np.cos(U) * np.cos(V)
Y = r * np.sin(U) * np.cos(V)
Z = -r *np.sin(V) - np.sqrt((X)**2 + (Y)**2)
fig = go.Figure(go.Surface(x=X,y=Y,z=Z,opacity=1,colorscale ='ylorrd',showscale=False,
                contours=dict(x=dict(show=True),y=dict(show=True),z=dict(show=True))))
fig.update_layout(scene = dict(aspectratio = dict(x=1, y=1, z=1)))
fig.show()

"""**Example: Ship's propeller**"""

import numpy as np
import plotly.graph_objects as go
u = np.linspace(0,2*np.pi,90)
v = np.linspace(0,np.pi,80)
U, V = np.meshgrid(u,v)
A = 4
B = 2
r = 2 + np.sin(A*U + B*V)
X = r * np.cos(U) * np.sin(V)
Y = r * np.cos(V)/5
Z = r * np.sin(U) * np.sin(V)
fig = go.Figure(go.Surface(x=X,y=Y,z=Z,opacity=1,colorscale ='temps',showscale=False,
                   contours=dict(x=dict(show=True),y=dict(show=True),z=dict(show=True))))
fig.update_layout(scene = dict(aspectratio = dict(x=1.5, y=.4, z=1.5)))
fig.show()

"""**Model the powerboat hull**"""

import numpy as np
import plotly.graph_objects as go
u = np.linspace(0,7*np.pi,90)
v = np.linspace(0,np.pi,80)
U, V = np.meshgrid(u,v)
r = U + np.sin(U + V)
X = r * np.cos(U) * np.sin(V)
Y = r * np.cos(V)
Z = r * np.sin(U) * np.sin(V)
fig = go.Figure(go.Surface(x=X,y=Y,z=Z,opacity=1,colorscale ='tealgrn',showscale=False,
                   contours=dict(x=dict(show=True),y=dict(show=True),z=dict(show=True))))
fig.update_layout(scene = dict(aspectratio = dict(x=1, y=1, z=1)))
fig.show()

import numpy as np
import plotly.graph_objects as go
u = np.linspace(np.pi/2,2*np.pi,90)
v = np.linspace(0,np.pi,80)
U, V = np.meshgrid(u,v)
r = (2**u + np.sin(U + V))/10
X = r * np.cos(U) * np.sin(V)
Y = r * np.cos(V)/5
Z = r * np.sin(U) * np.sin(V)
fig = go.Figure(go.Surface(x=X,y=Y,z=Z,opacity=1,colorscale ='tealgrn',showscale=False,
                contours=dict(x=dict(show=True),y=dict(show=True),z=dict(show=True))))
fig.update_layout(scene = dict(aspectratio = dict(x=3, y=1, z=.6)))
fig.show()